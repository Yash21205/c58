{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yash\\\\Desktop\\\\class-56-reference-code-main\\\\components\\\\Media.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Basicbutton from \"./components/Basicbutton\";\nexport default function Media() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  function handlepick() {\n    var result;\n    return _regeneratorRuntime.async(function handlepick$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Basicbutton, {\n    text: \"Pick a Image \",\n    onPress: handlepick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }), image ? React.createElement(React.Fragment, null, React.createElement(Image, {\n    source: {\n      uri: Image\n    },\n    style: StyleSheet.pics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }\n  })) : null);\n}\nvar style = StyleSheet.create({\n  pics: {\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Yash/Desktop/class-56-reference-code-main/components/Media.js"],"names":["React","useState","useEffect","Basicbutton","Media","image","setImage","Platform","OS","ImagePicker","requestMediaLibraryPermissionsAsync","status","alert","handlepick","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","Image","StyleSheet","pics","style","create","width","height","alignSelf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;;;;;;;AAEA,OAAOC,WAAP;AACA,eAAe,SAASC,KAAT,GAAgB;AAAA,kBAENH,QAAQ,CAAC,IAAD,CAFF;AAAA;AAAA,MAEtBI,KAFsB;AAAA,MAEhBC,QAFgB;;AAG3BJ,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACKK,QAAQ,CAACC,EAAT,KAAgB,KADrB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAE4BC,WAAW,CAACC,mCAAZ,EAF5B;;AAAA;AAAA;AAEWC,cAAAA,MAFX,yBAEWA,MAFX;;AAGG,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBC,gBAAAA,KAAK,CAAC,2DAAD,CAAL;AACD;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAQD,GATM,EASJ,EATI,CAAT;;AAYA,WAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACuBJ,WAAW,CAACK,uBAAZ,CAAoC;AACnDC,cAAAA,UAAU,EAAEN,WAAW,CAACO,gBAAZ,CAA6BC,GADU;AAEnDC,cAAAA,aAAa,EAAE,IAFoC;AAGnDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH2C;AAInDC,cAAAA,OAAO,EAAE;AAJ0C,aAApC,CADvB;;AAAA;AACQC,YAAAA,MADR;AAQMC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,gBAAI,CAACA,MAAM,CAACG,SAAZ,EAAuB;AACrBlB,cAAAA,QAAQ,CAACe,MAAM,CAACI,GAAR,CAAR;AACD;;AAZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,WAAD;AACA,IAAA,IAAI,EAAC,eADL;AACqB,IAAA,OAAO,EAAEZ,UAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAOKR,KAAK,GAAC,0CACN,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAACoB,MAAAA,GAAG,EAACC;AAAL,KAAf;AAA4B,IAAA,KAAK,EAAEC,UAAU,CAACC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,CAAD,GAIA,IAXV,CADJ;AAkBH;AAED,IAAMC,KAAK,GAACF,UAAU,CAACG,MAAX,CAAkB;AAE5BF,EAAAA,IAAI,EAAC;AACHG,IAAAA,KAAK,EAAC,MADH;AAEHC,IAAAA,MAAM,EAAC,MAFJ;AAGHC,IAAAA,SAAS,EAAC;AAHP;AAFuB,CAAlB,CAAZ","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, ScrollView, Button } from 'react-native';\r\nimport Basicbutton from './components/Basicbutton';\r\nexport default function Media(){\r\n\r\n  const [image,setImage]=useState(null);\r\n    useEffect(() => {\r\n        (async () => {\r\n          if (Platform.OS !== 'web') {\r\n            const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n            if (status !== 'granted') {\r\n              alert('Sorry, we need camera roll permissions to make this work!');\r\n            }\r\n          }\r\n        })();\r\n      }, []);\r\n\r\n\r\n    async function handlepick(){\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n          });\r\n      \r\n          console.log(result);\r\n      \r\n          if (!result.cancelled) {\r\n            setImage(result.uri);\r\n          }\r\n      \r\n    }\r\n    return(\r\n        <ScrollView>\r\n           <Basicbutton \r\n           text=\"Pick a Image \" onPress={handlepick}\r\n           >\r\n\r\n           </Basicbutton>\r\n           {\r\n             image?<>\r\n             <Image source={{uri:Image}} style={StyleSheet.pics}>\r\n              \r\n             </Image>\r\n             </>: null\r\n\r\n\r\n           }\r\n             </ScrollView>\r\n    );\r\n}\r\n\r\nconst style=StyleSheet.create({\r\n\r\n  pics:{\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    alignSelf:'center',\r\n\r\n\r\n  }\r\n\r\n\r\n});"]},"metadata":{},"sourceType":"module"}